import PortScanner

class VulnerabilityScanner:
    
    __vul_file = 'vul.txt'
    
    def __init__(self, victim_ip, number_of_ports):
        self.victim_ip = victim_ip
        self.number_of_ports = int(number_of_ports)
        self.__port_scanner = PortScanner.PortScanner(self.victim_ip, self.number_of_ports)
        self.__open_ports = []
        self.__vul_banners = []
    

    def vulnerability_scan(self):
        if (not self.__port_scanner.scan()): 
            return False
        banners = self.__port_scanner.get_tcp_banners()
        open_ports = self.__port_scanner.get_open_tcp_ports()
        with open(self.__vul_file, 'r', encoding='utf8') as file:
            port_idx = 0
            for banner in banners:
                if banner == ' ':
                    continue
                file.seek(0) # Add pointer to first line in file
                for line in file.readlines():
                    vul_banner = banner.replace(" ", "").lower()
                    vul_line = line.replace(" ", "").lower()
                    if (vul_banner in vul_line):
                        self.__vul_banners.append(banner)
                        self.__open_ports.append(open_ports[port_idx])
                port_idx += 1
        return True
    
    def get_vulnerability(self):
        return self.__vul_banners

    def get_open_ports(self):
        return self.__open_ports
                    

    